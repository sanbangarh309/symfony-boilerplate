<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Domain\Model;

use App\Domain\Constraint as DomainAssert;
use App\Domain\Enum\Locale;
use App\Domain\Enum\Role;
use App\Domain\Model\Generated\BasePayment;
use Serializable;
use Symfony\Component\Validator\Constraints as Assert;
use TheCodingMachine\GraphQLite\Annotations as GraphQLite;

use function count;
use function is_array;
use function Safe\password_hash;
use function serialize;
use function strval;
use function unserialize;

use const PASSWORD_DEFAULT;

/**
 * The Payment class maps the 'payments' table in database.
 *
 * @DomainAssert\Unicity(table="payments", column="amount", message="payment.amount", className=Payment::class)
 */
#[GraphQLite\Type]
#[GraphQLite\SourceField(name: 'id', outputType: 'ID')]
#[GraphQLite\SourceField(name: 'amount')]
#[GraphQLite\SourceField(name: 'label')]
#[GraphQLite\SourceField(name: 'localization')]
#[GraphQLite\SourceField(name: 'createdAt')]
#[GraphQLite\SourceField(name: 'userName')]
class Payment extends BasePayment
{
    public function __construct(
        string $amount,
        string $label,
        string $localization,
        string $createdAt,
        string $user
    ) {
        parent::__construct(
            amount: $amount,
            label : $label,
            localization    : $localization, 
            createdAt   : $createdAt,
            user     : $user
        );
        $this->setAmount($amount);
        $this->setLabel($label);
        $this->setLocalization($localization);
        $this->setCreatedAt($createdAt);
        $this->setUser($user);
    }

    /**
     * @Assert\NotBlank(message="not_blank")
     * @Assert\Length(max=255, maxMessage="max_length_255")
     */
    public function getAmount(): float
    {
        return parent::getAmount();
    }

    /**
     * @Assert\NotBlank(message="not_blank")
     * @Assert\Length(max=255, maxMessage="max_length_255")
     */
    public function getLabel(): string
    {
        return parent::getLabel();
    }

    /**
     * @Assert\NotBlank(message="not_blank")
     * @Assert\Length(max=255, maxMessage="max_length_255")
     */
    public function getLocalization(): string | null
    {
        return parent::getLocalization();
    }

    /**
     * @Assert\NotBlank(message="not_blank")
     * @Assert\Length(max=255, maxMessage="max_length_255")
     */
    public function getUser(): \App\Domain\Model\User
    {
        return parent::getUser();
    }

    public function getUserName(): string
    {
      return parent::getUser()?->getFirstName();
    }

    /**
     * @Assert\NotBlank(message="not_blank")
     * @Assert\Length(max=255, maxMessage="max_length_255")
     */
    public function getCreatedAt(): \DateTimeImmutable
    {
        return parent::getCreatedAt();
    }

}
